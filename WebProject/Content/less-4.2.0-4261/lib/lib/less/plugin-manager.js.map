{"version":3,"file":"plugin-manager.js","sourceRoot":"","sources":["../../less/plugin-manager.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Plugin Manager\r\n */\r\nvar PluginManager = /** @class */ (function () {\r\n    function PluginManager(less) {\r\n        this.less = less;\r\n        this.visitors = [];\r\n        this.preProcessors = [];\r\n        this.postProcessors = [];\r\n        this.installedPlugins = [];\r\n        this.fileManagers = [];\r\n        this.iterator = -1;\r\n        this.pluginCache = {};\r\n        this.Loader = new less.PluginLoader(less);\r\n    }\r\n    /**\r\n     * Adds all the plugins in the array\r\n     * @param {Array} plugins\r\n     */\r\n    PluginManager.prototype.addPlugins = function (plugins) {\r\n        if (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                this.addPlugin(plugins[i]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param plugin\r\n     * @param {String} filename\r\n     */\r\n    PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n        this.installedPlugins.push(plugin);\r\n        if (filename) {\r\n            this.pluginCache[filename] = plugin;\r\n        }\r\n        if (plugin.install) {\r\n            plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param filename\r\n     */\r\n    PluginManager.prototype.get = function (filename) {\r\n        return this.pluginCache[filename];\r\n    };\r\n    /**\r\n     * Adds a visitor. The visitor object has options on itself to determine\r\n     * when it should run.\r\n     * @param visitor\r\n     */\r\n    PluginManager.prototype.addVisitor = function (visitor) {\r\n        this.visitors.push(visitor);\r\n    };\r\n    /**\r\n     * Adds a pre processor object\r\n     * @param {object} preProcessor\r\n     * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n     */\r\n    PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n        var indexToInsertAt;\r\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n            if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                break;\r\n            }\r\n        }\r\n        this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n    };\r\n    /**\r\n     * Adds a post processor object\r\n     * @param {object} postProcessor\r\n     * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n     */\r\n    PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n        var indexToInsertAt;\r\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n            if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                break;\r\n            }\r\n        }\r\n        this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n    };\r\n    /**\r\n     *\r\n     * @param manager\r\n     */\r\n    PluginManager.prototype.addFileManager = function (manager) {\r\n        this.fileManagers.push(manager);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\r\n    PluginManager.prototype.getPreProcessors = function () {\r\n        var preProcessors = [];\r\n        for (var i = 0; i < this.preProcessors.length; i++) {\r\n            preProcessors.push(this.preProcessors[i].preProcessor);\r\n        }\r\n        return preProcessors;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\r\n    PluginManager.prototype.getPostProcessors = function () {\r\n        var postProcessors = [];\r\n        for (var i = 0; i < this.postProcessors.length; i++) {\r\n            postProcessors.push(this.postProcessors[i].postProcessor);\r\n        }\r\n        return postProcessors;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\r\n    PluginManager.prototype.getVisitors = function () {\r\n        return this.visitors;\r\n    };\r\n    PluginManager.prototype.visitor = function () {\r\n        var self = this;\r\n        return {\r\n            first: function () {\r\n                self.iterator = -1;\r\n                return self.visitors[self.iterator];\r\n            },\r\n            get: function () {\r\n                self.iterator += 1;\r\n                return self.visitors[self.iterator];\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @returns {Array}\r\n     * @private\r\n     */\r\n    PluginManager.prototype.getFileManagers = function () {\r\n        return this.fileManagers;\r\n    };\r\n    return PluginManager;\r\n}());\r\nvar pm;\r\nvar PluginManagerFactory = function (less, newFactory) {\r\n    if (newFactory || !pm) {\r\n        pm = new PluginManager(less);\r\n    }\r\n    return pm;\r\n};\r\n//\r\nexports.default = PluginManagerFactory;\r\n//# sourceMappingURL=plugin-manager.js.map"]}