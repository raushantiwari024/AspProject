{"version":3,"file":"variable.js","sourceRoot":"","sources":["../../../less/tree/variable.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar node_1 = tslib_1.__importDefault(require(\"./node\"));\r\nvar call_1 = tslib_1.__importDefault(require(\"./call\"));\r\nvar Variable = function (name, index, currentFileInfo) {\r\n    this.name = name;\r\n    this._index = index;\r\n    this._fileInfo = currentFileInfo;\r\n};\r\nVariable.prototype = Object.assign(new node_1.default(), {\r\n    type: 'Variable',\r\n    eval: function (context) {\r\n        var variable, name = this.name;\r\n        if (name.indexOf('@@') === 0) {\r\n            name = \"@\".concat(new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value);\r\n        }\r\n        if (this.evaluating) {\r\n            throw { type: 'Name',\r\n                message: \"Recursive variable definition for \".concat(name),\r\n                filename: this.fileInfo().filename,\r\n                index: this.getIndex() };\r\n        }\r\n        this.evaluating = true;\r\n        variable = this.find(context.frames, function (frame) {\r\n            var v = frame.variable(name);\r\n            if (v) {\r\n                if (v.important) {\r\n                    var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                    importantScope.important = v.important;\r\n                }\r\n                // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                if (context.inCalc) {\r\n                    return (new call_1.default('_SELF', [v.value])).eval(context);\r\n                }\r\n                else {\r\n                    return v.value.eval(context);\r\n                }\r\n            }\r\n        });\r\n        if (variable) {\r\n            this.evaluating = false;\r\n            return variable;\r\n        }\r\n        else {\r\n            throw { type: 'Name',\r\n                message: \"variable \".concat(name, \" is undefined\"),\r\n                filename: this.fileInfo().filename,\r\n                index: this.getIndex() };\r\n        }\r\n    },\r\n    find: function (obj, fun) {\r\n        for (var i = 0, r = void 0; i < obj.length; i++) {\r\n            r = fun.call(obj, obj[i]);\r\n            if (r) {\r\n                return r;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n});\r\nexports.default = Variable;\r\n//# sourceMappingURL=variable.js.map"]}