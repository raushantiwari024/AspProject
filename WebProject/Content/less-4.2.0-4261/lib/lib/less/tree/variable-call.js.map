{"version":3,"file":"variable-call.js","sourceRoot":"","sources":["../../../less/tree/variable-call.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AAChE,IAAI,SAAS,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAC9D,IAAI,kBAAkB,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAChF,IAAI,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AACrE,IAAI,YAAY,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE,eAAe;IACzD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACpB,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;IACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,CAAC,CAAC;AACF,YAAY,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;IACzD,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE,UAAU,OAAO;QACnB,IAAI,KAAK,CAAC;QACV,IAAI,eAAe,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5G,IAAI,KAAK,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,mCAAmC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7G,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,eAAe,CAAC,KAAK,EAAE,CAAC;gBACxB,KAAK,GAAG,eAAe,CAAC;YAC5B,CAAC;iBACI,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;gBACtC,KAAK,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;YACvD,CAAC;iBACI,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC5C,KAAK,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;YAC7D,CAAC;iBACI,CAAC;gBACF,MAAM,KAAK,CAAC;YAChB,CAAC;YACD,eAAe,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5D,CAAC;QACD,IAAI,eAAe,CAAC,OAAO,EAAE,CAAC;YAC1B,OAAO,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;QACD,MAAM,KAAK,CAAC;IAChB,CAAC;CACJ,CAAC,CAAC;AACH,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar node_1 = tslib_1.__importDefault(require(\"./node\"));\r\nvar variable_1 = tslib_1.__importDefault(require(\"./variable\"));\r\nvar ruleset_1 = tslib_1.__importDefault(require(\"./ruleset\"));\r\nvar detached_ruleset_1 = tslib_1.__importDefault(require(\"./detached-ruleset\"));\r\nvar less_error_1 = tslib_1.__importDefault(require(\"../less-error\"));\r\nvar VariableCall = function (variable, index, currentFileInfo) {\r\n    this.variable = variable;\r\n    this._index = index;\r\n    this._fileInfo = currentFileInfo;\r\n    this.allowRoot = true;\r\n};\r\nVariableCall.prototype = Object.assign(new node_1.default(), {\r\n    type: 'VariableCall',\r\n    eval: function (context) {\r\n        var rules;\r\n        var detachedRuleset = new variable_1.default(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n        var error = new less_error_1.default({ message: \"Could not evaluate variable call \".concat(this.variable) });\r\n        if (!detachedRuleset.ruleset) {\r\n            if (detachedRuleset.rules) {\r\n                rules = detachedRuleset;\r\n            }\r\n            else if (Array.isArray(detachedRuleset)) {\r\n                rules = new ruleset_1.default('', detachedRuleset);\r\n            }\r\n            else if (Array.isArray(detachedRuleset.value)) {\r\n                rules = new ruleset_1.default('', detachedRuleset.value);\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n            detachedRuleset = new detached_ruleset_1.default(rules);\r\n        }\r\n        if (detachedRuleset.ruleset) {\r\n            return detachedRuleset.callEval(context);\r\n        }\r\n        throw error;\r\n    }\r\n});\r\nexports.default = VariableCall;\r\n//# sourceMappingURL=variable-call.js.map"]}