{"version":3,"file":"color.js","sourceRoot":"","sources":["../../../less/tree/color.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar node_1 = tslib_1.__importDefault(require(\"./node\"));\r\nvar colors_1 = tslib_1.__importDefault(require(\"../data/colors\"));\r\n//\r\n// RGB Colors - #ff0014, #eee\r\n//\r\nvar Color = function (rgb, a, originalForm) {\r\n    var self = this;\r\n    //\r\n    // The end goal here, is to parse the arguments\r\n    // into an integer triplet, such as `128, 255, 0`\r\n    //\r\n    // This facilitates operations and conversions.\r\n    //\r\n    if (Array.isArray(rgb)) {\r\n        this.rgb = rgb;\r\n    }\r\n    else if (rgb.length >= 6) {\r\n        this.rgb = [];\r\n        rgb.match(/.{2}/g).map(function (c, i) {\r\n            if (i < 3) {\r\n                self.rgb.push(parseInt(c, 16));\r\n            }\r\n            else {\r\n                self.alpha = (parseInt(c, 16)) / 255;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        this.rgb = [];\r\n        rgb.split('').map(function (c, i) {\r\n            if (i < 3) {\r\n                self.rgb.push(parseInt(c + c, 16));\r\n            }\r\n            else {\r\n                self.alpha = (parseInt(c + c, 16)) / 255;\r\n            }\r\n        });\r\n    }\r\n    this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n    if (typeof originalForm !== 'undefined') {\r\n        this.value = originalForm;\r\n    }\r\n};\r\nColor.prototype = Object.assign(new node_1.default(), {\r\n    type: 'Color',\r\n    luma: function () {\r\n        var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n        r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n        g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n        b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    },\r\n    genCSS: function (context, output) {\r\n        output.add(this.toCSS(context));\r\n    },\r\n    toCSS: function (context, doNotCompress) {\r\n        var compress = context && context.compress && !doNotCompress;\r\n        var color;\r\n        var alpha;\r\n        var colorFunction;\r\n        var args = [];\r\n        // `value` is set if this color was originally\r\n        // converted from a named color string so we need\r\n        // to respect this and try to output named color too.\r\n        alpha = this.fround(context, this.alpha);\r\n        if (this.value) {\r\n            if (this.value.indexOf('rgb') === 0) {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            else if (this.value.indexOf('hsl') === 0) {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'hsla';\r\n                }\r\n                else {\r\n                    colorFunction = 'hsl';\r\n                }\r\n            }\r\n            else {\r\n                return this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (alpha < 1) {\r\n                colorFunction = 'rgba';\r\n            }\r\n        }\r\n        switch (colorFunction) {\r\n            case 'rgba':\r\n                args = this.rgb.map(function (c) {\r\n                    return clamp(Math.round(c), 255);\r\n                }).concat(clamp(alpha, 1));\r\n                break;\r\n            case 'hsla':\r\n                args.push(clamp(alpha, 1));\r\n            // eslint-disable-next-line no-fallthrough\r\n            case 'hsl':\r\n                color = this.toHSL();\r\n                args = [\r\n                    this.fround(context, color.h),\r\n                    \"\".concat(this.fround(context, color.s * 100), \"%\"),\r\n                    \"\".concat(this.fround(context, color.l * 100), \"%\")\r\n                ].concat(args);\r\n        }\r\n        if (colorFunction) {\r\n            // Values are capped between `0` and `255`, rounded and zero-padded.\r\n            return \"\".concat(colorFunction, \"(\").concat(args.join(\",\".concat(compress ? '' : ' ')), \")\");\r\n        }\r\n        color = this.toRGB();\r\n        if (compress) {\r\n            var splitcolor = color.split('');\r\n            // Convert color to short format\r\n            if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                color = \"#\".concat(splitcolor[1]).concat(splitcolor[3]).concat(splitcolor[5]);\r\n            }\r\n        }\r\n        return color;\r\n    },\r\n    //\r\n    // Operations have to be done per-channel, if not,\r\n    // channels will spill onto each other. Once we have\r\n    // our result, in the form of an integer triplet,\r\n    // we create a new Color node to hold the result.\r\n    //\r\n    operate: function (context, op, other) {\r\n        var rgb = new Array(3);\r\n        var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n        for (var c = 0; c < 3; c++) {\r\n            rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n        }\r\n        return new Color(rgb, alpha);\r\n    },\r\n    toRGB: function () {\r\n        return toHex(this.rgb);\r\n    },\r\n    toHSL: function () {\r\n        var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h;\r\n        var s;\r\n        var l = (max + min) / 2;\r\n        var d = max - min;\r\n        if (max === min) {\r\n            h = s = 0;\r\n        }\r\n        else {\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h * 360, s: s, l: l, a: a };\r\n    },\r\n    // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n    toHSV: function () {\r\n        var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h;\r\n        var s;\r\n        var v = max;\r\n        var d = max - min;\r\n        if (max === 0) {\r\n            s = 0;\r\n        }\r\n        else {\r\n            s = d / max;\r\n        }\r\n        if (max === min) {\r\n            h = 0;\r\n        }\r\n        else {\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h * 360, s: s, v: v, a: a };\r\n    },\r\n    toARGB: function () {\r\n        return toHex([this.alpha * 255].concat(this.rgb));\r\n    },\r\n    compare: function (x) {\r\n        return (x.rgb &&\r\n            x.rgb[0] === this.rgb[0] &&\r\n            x.rgb[1] === this.rgb[1] &&\r\n            x.rgb[2] === this.rgb[2] &&\r\n            x.alpha === this.alpha) ? 0 : undefined;\r\n    }\r\n});\r\nColor.fromKeyword = function (keyword) {\r\n    var c;\r\n    var key = keyword.toLowerCase();\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (colors_1.default.hasOwnProperty(key)) {\r\n        c = new Color(colors_1.default[key].slice(1));\r\n    }\r\n    else if (key === 'transparent') {\r\n        c = new Color([0, 0, 0], 0);\r\n    }\r\n    if (c) {\r\n        c.value = keyword;\r\n        return c;\r\n    }\r\n};\r\nfunction clamp(v, max) {\r\n    return Math.min(Math.max(v, 0), max);\r\n}\r\nfunction toHex(v) {\r\n    return \"#\".concat(v.map(function (c) {\r\n        c = clamp(Math.round(c), 255);\r\n        return (c < 16 ? '0' : '') + c.toString(16);\r\n    }).join(''));\r\n}\r\nexports.default = Color;\r\n//# sourceMappingURL=color.js.map"]}