{"version":3,"file":"url.js","sourceRoot":"","sources":["../../../less/tree/url.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar node_1 = tslib_1.__importDefault(require(\"./node\"));\r\nfunction escapePath(path) {\r\n    return path.replace(/[()'\"\\s]/g, function (match) { return \"\\\\\".concat(match); });\r\n}\r\nvar URL = function (val, index, currentFileInfo, isEvald) {\r\n    this.value = val;\r\n    this._index = index;\r\n    this._fileInfo = currentFileInfo;\r\n    this.isEvald = isEvald;\r\n};\r\nURL.prototype = Object.assign(new node_1.default(), {\r\n    type: 'Url',\r\n    accept: function (visitor) {\r\n        this.value = visitor.visit(this.value);\r\n    },\r\n    genCSS: function (context, output) {\r\n        output.add('url(');\r\n        this.value.genCSS(context, output);\r\n        output.add(')');\r\n    },\r\n    eval: function (context) {\r\n        var val = this.value.eval(context);\r\n        var rootpath;\r\n        if (!this.isEvald) {\r\n            // Add the rootpath if the URL requires a rewrite\r\n            rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n            if (typeof rootpath === 'string' &&\r\n                typeof val.value === 'string' &&\r\n                context.pathRequiresRewrite(val.value)) {\r\n                if (!val.quote) {\r\n                    rootpath = escapePath(rootpath);\r\n                }\r\n                val.value = context.rewritePath(val.value, rootpath);\r\n            }\r\n            else {\r\n                val.value = context.normalizePath(val.value);\r\n            }\r\n            // Add url args if enabled\r\n            if (context.urlArgs) {\r\n                if (!val.value.match(/^\\s*data:/)) {\r\n                    var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                    var urlArgs = delimiter + context.urlArgs;\r\n                    if (val.value.indexOf('#') !== -1) {\r\n                        val.value = val.value.replace('#', \"\".concat(urlArgs, \"#\"));\r\n                    }\r\n                    else {\r\n                        val.value += urlArgs;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n    }\r\n});\r\nexports.default = URL;\r\n//# sourceMappingURL=url.js.map"]}