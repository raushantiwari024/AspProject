{"version":3,"file":"atrule.js","sourceRoot":"","sources":["../../../less/tree/atrule.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar node_1 = tslib_1.__importDefault(require(\"./node\"));\r\nvar selector_1 = tslib_1.__importDefault(require(\"./selector\"));\r\nvar ruleset_1 = tslib_1.__importDefault(require(\"./ruleset\"));\r\nvar anonymous_1 = tslib_1.__importDefault(require(\"./anonymous\"));\r\nvar AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n    var i;\r\n    this.name = name;\r\n    this.value = (value instanceof node_1.default) ? value : (value ? new anonymous_1.default(value) : value);\r\n    if (rules) {\r\n        if (Array.isArray(rules)) {\r\n            this.rules = rules;\r\n        }\r\n        else {\r\n            this.rules = [rules];\r\n            this.rules[0].selectors = (new selector_1.default([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n        }\r\n        for (i = 0; i < this.rules.length; i++) {\r\n            this.rules[i].allowImports = true;\r\n        }\r\n        this.setParent(this.rules, this);\r\n    }\r\n    this._index = index;\r\n    this._fileInfo = currentFileInfo;\r\n    this.debugInfo = debugInfo;\r\n    this.isRooted = isRooted || false;\r\n    this.copyVisibilityInfo(visibilityInfo);\r\n    this.allowRoot = true;\r\n};\r\nAtRule.prototype = Object.assign(new node_1.default(), {\r\n    type: 'AtRule',\r\n    accept: function (visitor) {\r\n        var value = this.value, rules = this.rules;\r\n        if (rules) {\r\n            this.rules = visitor.visitArray(rules);\r\n        }\r\n        if (value) {\r\n            this.value = visitor.visit(value);\r\n        }\r\n    },\r\n    isRulesetLike: function () {\r\n        return this.rules || !this.isCharset();\r\n    },\r\n    isCharset: function () {\r\n        return '@charset' === this.name;\r\n    },\r\n    genCSS: function (context, output) {\r\n        var value = this.value, rules = this.rules;\r\n        output.add(this.name, this.fileInfo(), this.getIndex());\r\n        if (value) {\r\n            output.add(' ');\r\n            value.genCSS(context, output);\r\n        }\r\n        if (rules) {\r\n            this.outputRuleset(context, output, rules);\r\n        }\r\n        else {\r\n            output.add(';');\r\n        }\r\n    },\r\n    eval: function (context) {\r\n        var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n        // media stored inside other atrule should not bubble over it\r\n        // backpup media bubbling information\r\n        mediaPathBackup = context.mediaPath;\r\n        mediaBlocksBackup = context.mediaBlocks;\r\n        // deleted media bubbling information\r\n        context.mediaPath = [];\r\n        context.mediaBlocks = [];\r\n        if (value) {\r\n            value = value.eval(context);\r\n        }\r\n        if (rules) {\r\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n            rules = [rules[0].eval(context)];\r\n            rules[0].root = true;\r\n        }\r\n        // restore media bubbling information\r\n        context.mediaPath = mediaPathBackup;\r\n        context.mediaBlocks = mediaBlocksBackup;\r\n        return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n    },\r\n    variable: function (name) {\r\n        if (this.rules) {\r\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n            return ruleset_1.default.prototype.variable.call(this.rules[0], name);\r\n        }\r\n    },\r\n    find: function () {\r\n        if (this.rules) {\r\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n            return ruleset_1.default.prototype.find.apply(this.rules[0], arguments);\r\n        }\r\n    },\r\n    rulesets: function () {\r\n        if (this.rules) {\r\n            // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n            return ruleset_1.default.prototype.rulesets.apply(this.rules[0]);\r\n        }\r\n    },\r\n    outputRuleset: function (context, output, rules) {\r\n        var ruleCnt = rules.length;\r\n        var i;\r\n        context.tabLevel = (context.tabLevel | 0) + 1;\r\n        // Compressed\r\n        if (context.compress) {\r\n            output.add('{');\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                rules[i].genCSS(context, output);\r\n            }\r\n            output.add('}');\r\n            context.tabLevel--;\r\n            return;\r\n        }\r\n        // Non-compressed\r\n        var tabSetStr = \"\\n\".concat(Array(context.tabLevel).join('  ')), tabRuleStr = \"\".concat(tabSetStr, \"  \");\r\n        if (!ruleCnt) {\r\n            output.add(\" {\".concat(tabSetStr, \"}\"));\r\n        }\r\n        else {\r\n            output.add(\" {\".concat(tabRuleStr));\r\n            rules[0].genCSS(context, output);\r\n            for (i = 1; i < ruleCnt; i++) {\r\n                output.add(tabRuleStr);\r\n                rules[i].genCSS(context, output);\r\n            }\r\n            output.add(\"\".concat(tabSetStr, \"}\"));\r\n        }\r\n        context.tabLevel--;\r\n    }\r\n});\r\nexports.default = AtRule;\r\n//# sourceMappingURL=atrule.js.map"]}