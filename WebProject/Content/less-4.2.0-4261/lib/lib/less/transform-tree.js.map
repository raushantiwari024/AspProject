{"version":3,"file":"transform-tree.js","sourceRoot":"","sources":["../../less/transform-tree.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar contexts_1 = tslib_1.__importDefault(require(\"./contexts\"));\r\nvar visitors_1 = tslib_1.__importDefault(require(\"./visitors\"));\r\nvar tree_1 = tslib_1.__importDefault(require(\"./tree\"));\r\nfunction default_1(root, options) {\r\n    options = options || {};\r\n    var evaldRoot;\r\n    var variables = options.variables;\r\n    var evalEnv = new contexts_1.default.Eval(options);\r\n    //\r\n    // Allows setting variables with a hash, so:\r\n    //\r\n    //   `{ color: new tree.Color('#f01') }` will become:\r\n    //\r\n    //   new tree.Declaration('@color',\r\n    //     new tree.Value([\r\n    //       new tree.Expression([\r\n    //         new tree.Color('#f01')\r\n    //       ])\r\n    //     ])\r\n    //   )\r\n    //\r\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n        variables = Object.keys(variables).map(function (k) {\r\n            var value = variables[k];\r\n            if (!(value instanceof tree_1.default.Value)) {\r\n                if (!(value instanceof tree_1.default.Expression)) {\r\n                    value = new tree_1.default.Expression([value]);\r\n                }\r\n                value = new tree_1.default.Value([value]);\r\n            }\r\n            return new tree_1.default.Declaration(\"@\".concat(k), value, false, null, 0);\r\n        });\r\n        evalEnv.frames = [new tree_1.default.Ruleset(null, variables)];\r\n    }\r\n    var visitors = [\r\n        new visitors_1.default.JoinSelectorVisitor(),\r\n        new visitors_1.default.MarkVisibleSelectorsVisitor(true),\r\n        new visitors_1.default.ExtendVisitor(),\r\n        new visitors_1.default.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n    ];\r\n    var preEvalVisitors = [];\r\n    var v;\r\n    var visitorIterator;\r\n    /**\r\n     * first() / get() allows visitors to be added while visiting\r\n     *\r\n     * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n     */\r\n    if (options.pluginManager) {\r\n        visitorIterator = options.pluginManager.visitor();\r\n        for (var i = 0; i < 2; i++) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (v.isPreEvalVisitor) {\r\n                    if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                        preEvalVisitors.push(v);\r\n                        v.run(root);\r\n                    }\r\n                }\r\n                else {\r\n                    if (i === 0 || visitors.indexOf(v) === -1) {\r\n                        if (v.isPreVisitor) {\r\n                            visitors.unshift(v);\r\n                        }\r\n                        else {\r\n                            visitors.push(v);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    evaldRoot = root.eval(evalEnv);\r\n    for (var i = 0; i < visitors.length; i++) {\r\n        visitors[i].run(evaldRoot);\r\n    }\r\n    // Run any remaining visitors added after eval pass\r\n    if (options.pluginManager) {\r\n        visitorIterator.first();\r\n        while ((v = visitorIterator.get())) {\r\n            if (visitors.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                v.run(evaldRoot);\r\n            }\r\n        }\r\n    }\r\n    return evaldRoot;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=transform-tree.js.map"]}