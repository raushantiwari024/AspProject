{"version":3,"file":"data-uri.js","sourceRoot":"","sources":["../../../less/functions/data-uri.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar quoted_1 = tslib_1.__importDefault(require(\"../tree/quoted\"));\r\nvar url_1 = tslib_1.__importDefault(require(\"../tree/url\"));\r\nvar utils = tslib_1.__importStar(require(\"../utils\"));\r\nvar logger_1 = tslib_1.__importDefault(require(\"../logger\"));\r\nexports.default = (function (environment) {\r\n    var fallback = function (functionThis, node) { return new url_1.default(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n    return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n            if (!filePathNode) {\r\n                filePathNode = mimetypeNode;\r\n                mimetypeNode = null;\r\n            }\r\n            var mimetype = mimetypeNode && mimetypeNode.value;\r\n            var filePath = filePathNode.value;\r\n            var currentFileInfo = this.currentFileInfo;\r\n            var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n            var fragmentStart = filePath.indexOf('#');\r\n            var fragment = '';\r\n            if (fragmentStart !== -1) {\r\n                fragment = filePath.slice(fragmentStart);\r\n                filePath = filePath.slice(0, fragmentStart);\r\n            }\r\n            var context = utils.clone(this.context);\r\n            context.rawBuffer = true;\r\n            var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n            if (!fileManager) {\r\n                return fallback(this, filePathNode);\r\n            }\r\n            var useBase64 = false;\r\n            // detect the mimetype if not given\r\n            if (!mimetypeNode) {\r\n                mimetype = environment.mimeLookup(filePath);\r\n                if (mimetype === 'image/svg+xml') {\r\n                    useBase64 = false;\r\n                }\r\n                else {\r\n                    // use base 64 unless it's an ASCII or UTF-8 format\r\n                    var charset = environment.charsetLookup(mimetype);\r\n                    useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                }\r\n                if (useBase64) {\r\n                    mimetype += ';base64';\r\n                }\r\n            }\r\n            else {\r\n                useBase64 = /;base64$/.test(mimetype);\r\n            }\r\n            var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n            if (!fileSync.contents) {\r\n                logger_1.default.warn(\"Skipped data-uri embedding of \".concat(filePath, \" because file not found\"));\r\n                return fallback(this, filePathNode || mimetypeNode);\r\n            }\r\n            var buf = fileSync.contents;\r\n            if (useBase64 && !environment.encodeBase64) {\r\n                return fallback(this, filePathNode);\r\n            }\r\n            buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n            var uri = \"data:\".concat(mimetype, \",\").concat(buf).concat(fragment);\r\n            return new url_1.default(new quoted_1.default(\"\\\"\".concat(uri, \"\\\"\"), uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n        } };\r\n});\r\n//# sourceMappingURL=data-uri.js.map"]}