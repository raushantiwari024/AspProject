{"version":3,"file":"string.js","sourceRoot":"","sources":["../../../less/functions/string.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar quoted_1 = tslib_1.__importDefault(require(\"../tree/quoted\"));\r\nvar anonymous_1 = tslib_1.__importDefault(require(\"../tree/anonymous\"));\r\nvar javascript_1 = tslib_1.__importDefault(require(\"../tree/javascript\"));\r\nexports.default = {\r\n    e: function (str) {\r\n        return new quoted_1.default('\"', str instanceof javascript_1.default ? str.evaluated : str.value, true);\r\n    },\r\n    escape: function (str) {\r\n        return new anonymous_1.default(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n            .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n    },\r\n    replace: function (string, pattern, replacement, flags) {\r\n        var result = string.value;\r\n        replacement = (replacement.type === 'Quoted') ?\r\n            replacement.value : replacement.toCSS();\r\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n        return new quoted_1.default(string.quote || '', result, string.escaped);\r\n    },\r\n    '%': function (string /* arg, arg, ... */) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var result = string.value;\r\n        var _loop_1 = function (i) {\r\n            /* jshint loopfunc:true */\r\n            result = result.replace(/%[sda]/i, function (token) {\r\n                var value = ((args[i].type === 'Quoted') &&\r\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n            });\r\n        };\r\n        for (var i = 0; i < args.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        result = result.replace(/%%/g, '%');\r\n        return new quoted_1.default(string.quote || '', result, string.escaped);\r\n    }\r\n};\r\n//# sourceMappingURL=string.js.map"]}