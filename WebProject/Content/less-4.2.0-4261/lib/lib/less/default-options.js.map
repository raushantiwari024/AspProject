{"version":3,"file":"default-options.js","sourceRoot":"","sources":["../../less/default-options.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,iCAAiC;AACjC,SAAS,SAAS;IACd,OAAO;QACH,+CAA+C;QAC/C,iBAAiB,EAAE,KAAK;QACxB,0DAA0D;QAC1D,OAAO,EAAE,KAAK;QACd;;wCAEgC;QAChC,QAAQ,EAAE,KAAK;QACf,sEAAsE;QACtE,IAAI,EAAE,KAAK;QACX;;;;gFAIwE;QACxE,KAAK,EAAE,EAAE;QACT,kCAAkC;QAClC,KAAK,EAAE,IAAI;QACX;;6DAEqD;QACrD,aAAa,EAAE,KAAK;QACpB,6CAA6C;QAC7C,QAAQ,EAAE,KAAK;QACf;;8CAEsC;QACtC,QAAQ,EAAE,EAAE;QACZ;;;8DAGsD;QACtD,WAAW,EAAE,KAAK;QAClB;;;;;WAKG;QACH,IAAI,EAAE,CAAC;QACP,wFAAwF;QACxF,WAAW,EAAE,KAAK;QAClB;;qCAE6B;QAC7B,UAAU,EAAE,IAAI;QAChB;iGACyF;QACzF,UAAU,EAAE,IAAI;QAChB,0EAA0E;QAC1E,OAAO,EAAE,EAAE;KACd,CAAC;AACN,CAAC;AACD,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Export a new default each time\r\nfunction default_1() {\r\n    return {\r\n        /* Inline Javascript - @plugin still allowed */\r\n        javascriptEnabled: false,\r\n        /* Outputs a makefile import dependency list to stdout. */\r\n        depends: false,\r\n        /* (DEPRECATED) Compress using less built-in compression.\r\n         * This does an okay job but does not utilise all the tricks of\r\n         * dedicated css compression. */\r\n        compress: false,\r\n        /* Runs the less parser and just reports errors without any output. */\r\n        lint: false,\r\n        /* Sets available include paths.\r\n         * If the file in an @import rule does not exist at that exact location,\r\n         * less will look for it at the location(s) passed to this option.\r\n         * You might use this for instance to specify a path to a library which\r\n         * you want to be referenced simply and relatively in the less files. */\r\n        paths: [],\r\n        /* color output in the terminal */\r\n        color: true,\r\n        /* The strictImports controls whether the compiler will allow an @import inside of either\r\n         * @media blocks or (a later addition) other selector blocks.\r\n         * See: https://github.com/less/less.js/issues/656 */\r\n        strictImports: false,\r\n        /* Allow Imports from Insecure HTTPS Hosts */\r\n        insecure: false,\r\n        /* Allows you to add a path to every generated import and url in your css.\r\n         * This does not affect less import statements that are processed, just ones\r\n         * that are left in the output css. */\r\n        rootpath: '',\r\n        /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n         * that references an image, exactly the same URL will be output in the css.\r\n         * This option allows you to re-write URL's in imported files so that the\r\n         * URL is always relative to the base imported file */\r\n        rewriteUrls: false,\r\n        /* How to process math\r\n         *   0 always           - eagerly try to solve all operations\r\n         *   1 parens-division  - require parens for division \"/\"\r\n         *   2 parens | strict  - require parens for all operations\r\n         *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n         */\r\n        math: 1,\r\n        /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n        strictUnits: false,\r\n        /* Effectively the declaration is put at the top of your base Less file,\r\n         * meaning it can be used but it also can be overridden if this variable\r\n         * is defined in the file. */\r\n        globalVars: null,\r\n        /* As opposed to the global variable option, this puts the declaration at the\r\n         * end of your base file, meaning it will override anything defined in your Less file. */\r\n        modifyVars: null,\r\n        /* This option allows you to specify a argument to go on to every URL.  */\r\n        urlArgs: ''\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=default-options.js.map"]}