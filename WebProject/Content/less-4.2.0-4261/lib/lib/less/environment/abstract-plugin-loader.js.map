{"version":3,"file":"abstract-plugin-loader.js","sourceRoot":"","sources":["../../../less/environment/abstract-plugin-loader.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar function_registry_1 = tslib_1.__importDefault(require(\"../functions/function-registry\"));\r\nvar less_error_1 = tslib_1.__importDefault(require(\"../less-error\"));\r\nvar AbstractPluginLoader = /** @class */ (function () {\r\n    function AbstractPluginLoader() {\r\n        // Implemented by Node.js plugin loader\r\n        this.require = function () {\r\n            return null;\r\n        };\r\n    }\r\n    AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n        var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n        pluginManager = context.pluginManager;\r\n        if (fileInfo) {\r\n            if (typeof fileInfo === 'string') {\r\n                filename = fileInfo;\r\n            }\r\n            else {\r\n                filename = fileInfo.filename;\r\n            }\r\n        }\r\n        var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n        if (filename) {\r\n            pluginObj = pluginManager.get(filename);\r\n            if (pluginObj) {\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new less_error_1.default(e, imports, filename);\r\n                }\r\n                return pluginObj;\r\n            }\r\n        }\r\n        localModule = {\r\n            exports: {},\r\n            pluginManager: pluginManager,\r\n            fileInfo: fileInfo\r\n        };\r\n        registry = function_registry_1.default.create();\r\n        var registerPlugin = function (obj) {\r\n            pluginObj = obj;\r\n        };\r\n        try {\r\n            loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n            loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n        }\r\n        catch (e) {\r\n            return new less_error_1.default(e, imports, filename);\r\n        }\r\n        if (!pluginObj) {\r\n            pluginObj = localModule.exports;\r\n        }\r\n        pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n        if (pluginObj instanceof less_error_1.default) {\r\n            return pluginObj;\r\n        }\r\n        if (pluginObj) {\r\n            pluginObj.imports = imports;\r\n            pluginObj.filename = filename;\r\n            // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n            if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            // Run on first load\r\n            pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n            pluginObj.functions = registry.getLocalFunctions();\r\n            // Need to call setOptions again because the pluginObj might have functions\r\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            // Run every @plugin call\r\n            try {\r\n                if (pluginObj.use) {\r\n                    pluginObj.use.call(this.context, pluginObj);\r\n                }\r\n            }\r\n            catch (e) {\r\n                e.message = e.message || 'Error during @plugin call';\r\n                return new less_error_1.default(e, imports, filename);\r\n            }\r\n        }\r\n        else {\r\n            return new less_error_1.default({ message: 'Not a valid plugin' }, imports, filename);\r\n        }\r\n        return pluginObj;\r\n    };\r\n    AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n        if (options && !plugin.setOptions) {\r\n            return new less_error_1.default({\r\n                message: \"Options have been provided but the plugin \".concat(name, \" does not support any options.\")\r\n            });\r\n        }\r\n        try {\r\n            plugin.setOptions && plugin.setOptions(options);\r\n        }\r\n        catch (e) {\r\n            return new less_error_1.default(e);\r\n        }\r\n    };\r\n    AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n        if (plugin) {\r\n            // support plugins being a function\r\n            // so that the plugin can be more usable programmatically\r\n            if (typeof plugin === 'function') {\r\n                plugin = new plugin();\r\n            }\r\n            if (plugin.minVersion) {\r\n                if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                    return new less_error_1.default({\r\n                        message: \"Plugin \".concat(name, \" requires version \").concat(this.versionToString(plugin.minVersion))\r\n                    });\r\n                }\r\n            }\r\n            return plugin;\r\n        }\r\n        return null;\r\n    };\r\n    AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n        if (typeof aVersion === 'string') {\r\n            aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n            aVersion.shift();\r\n        }\r\n        for (var i = 0; i < aVersion.length; i++) {\r\n            if (aVersion[i] !== bVersion[i]) {\r\n                return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    AbstractPluginLoader.prototype.versionToString = function (version) {\r\n        var versionString = '';\r\n        for (var i = 0; i < version.length; i++) {\r\n            versionString += (versionString ? '.' : '') + version[i];\r\n        }\r\n        return versionString;\r\n    };\r\n    AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n        for (var i = 0; i < plugins.length; i++) {\r\n            var plugin = plugins[i];\r\n            if (plugin.printUsage) {\r\n                plugin.printUsage();\r\n            }\r\n        }\r\n    };\r\n    return AbstractPluginLoader;\r\n}());\r\nexports.default = AbstractPluginLoader;\r\n//# sourceMappingURL=abstract-plugin-loader.js.map"]}