{"version":3,"file":"environment.js","sourceRoot":"","sources":["../../../less/environment/environment.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * @todo Document why this abstraction exists, and the relationship between\r\n *       environment, file managers, and plugin manager\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar logger_1 = tslib_1.__importDefault(require(\"../logger\"));\r\nvar Environment = /** @class */ (function () {\r\n    function Environment(externalEnvironment, fileManagers) {\r\n        this.fileManagers = fileManagers || [];\r\n        externalEnvironment = externalEnvironment || {};\r\n        var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n        var requiredFunctions = [];\r\n        var functions = requiredFunctions.concat(optionalFunctions);\r\n        for (var i = 0; i < functions.length; i++) {\r\n            var propName = functions[i];\r\n            var environmentFunc = externalEnvironment[propName];\r\n            if (environmentFunc) {\r\n                this[propName] = environmentFunc.bind(externalEnvironment);\r\n            }\r\n            else if (i < requiredFunctions.length) {\r\n                this.warn(\"missing required function in environment - \".concat(propName));\r\n            }\r\n        }\r\n    }\r\n    Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n        if (!filename) {\r\n            logger_1.default.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n        }\r\n        if (currentDirectory === undefined) {\r\n            logger_1.default.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n        }\r\n        var fileManagers = this.fileManagers;\r\n        if (options.pluginManager) {\r\n            fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n        }\r\n        for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n            var fileManager = fileManagers[i];\r\n            if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                return fileManager;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Environment.prototype.addFileManager = function (fileManager) {\r\n        this.fileManagers.push(fileManager);\r\n    };\r\n    Environment.prototype.clearFileManagers = function () {\r\n        this.fileManagers = [];\r\n    };\r\n    return Environment;\r\n}());\r\nexports.default = Environment;\r\n//# sourceMappingURL=environment.js.map"]}