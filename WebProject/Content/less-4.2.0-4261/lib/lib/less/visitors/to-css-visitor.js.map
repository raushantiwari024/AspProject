{"version":3,"file":"to-css-visitor.js","sourceRoot":"","sources":["../../../less/visitors/to-css-visitor.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,mCAAmC;AACnC;;GAEG;AACH,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AACzD,IAAI,SAAS,GAAG,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAC9D,IAAI,eAAe,GAAG,aAAa,CAAC,CAAC;IACjC,SAAS,eAAe,CAAC,OAAO;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IACD,eAAe,CAAC,SAAS,CAAC,6BAA6B,GAAG,UAAU,SAAS;QACzE,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,SAAS,EAAE,CAAC;YACb,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;gBAC5E,uEAAuE;gBACvE,+CAA+C;gBAC/C,OAAO,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,KAAK;QAC7D,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;YACvB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,OAAO,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,CAAC;IACL,CAAC,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK;QAC/C,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5C,CAAC,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,WAAW;QAChE,OAAO,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACjD,CAAC,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,IAAI;QACxD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrB,OAAO;YACX,CAAC;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAClC,OAAO;QACX,CAAC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IACF,eAAe,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,WAAW;QAC9D,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;YAC5B,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC;YAC7D,OAAO,KAAK,CAAC;QACjB,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IACF,OAAO,eAAe,CAAC;AAC3B,CAAC,EAAE,CAAC,CAAC;AACL,IAAI,YAAY,GAAG,UAAU,OAAO;IAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IACxB,IAAI,CAAC,KAAK,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC;AAC9C,CAAC,CAAC;AACF,YAAY,CAAC,SAAS,GAAG;IACrB,WAAW,EAAE,IAAI;IACjB,GAAG,EAAE,UAAU,IAAI;QACf,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IACD,gBAAgB,EAAE,UAAU,QAAQ,EAAE,SAAS;QAC3C,IAAI,QAAQ,CAAC,gBAAgB,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACnD,OAAO;QACX,CAAC;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IACD,oBAAoB,EAAE,UAAU,SAAS,EAAE,SAAS;QAChD,mEAAmE;QACnE,gFAAgF;QAChF,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;IAC1B,CAAC;IACD,WAAW,EAAE,UAAU,UAAU,EAAE,SAAS;IAC5C,CAAC;IACD,YAAY,EAAE,UAAU,WAAW,EAAE,SAAS;QAC1C,IAAI,WAAW,CAAC,gBAAgB,EAAE,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACxE,OAAO;QACX,CAAC;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IACD,UAAU,EAAE,UAAU,SAAS,EAAE,SAAS;QACtC,IAAI,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7C,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,EAAE,UAAU,UAAU,EAAE,SAAS;QACxC,IAAI,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAChC,OAAO;QACX,CAAC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IACD,WAAW,EAAE,UAAU,UAAU,EAAE,SAAS;QACxC,IAAI,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC3D,CAAC;aACI,CAAC;YACF,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IACD,cAAc,EAAE,UAAU,aAAa,EAAE,SAAS;QAC9C,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,EAAE,CAAC;YACpC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,aAAa,CAAC;QACzB,CAAC;IACL,CAAC;IACD,mBAAmB,EAAE,UAAU,UAAU,EAAE,SAAS;QAChD,2EAA2E;QAC3E,oBAAoB;QACpB,SAAS,cAAc,CAAC,UAAU;YAC9B,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;YACjC,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QAC9F,CAAC;QACD,SAAS,YAAY,CAAC,UAAU;YAC5B,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;YACjC,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC7B,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC9B,CAAC;YACD,OAAO,SAAS,CAAC;QACrB,CAAC;QACD,wDAAwD;QACxD,2BAA2B;QAC3B,iBAAiB;QACjB,IAAI,aAAa,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IACnE,CAAC;IACD,sBAAsB,EAAE,UAAU,UAAU,EAAE,SAAS;QACnD,IAAI,UAAU,CAAC,gBAAgB,EAAE,EAAE,CAAC;YAChC,OAAO;QACX,CAAC;QACD,IAAI,UAAU,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC;YACjC,2EAA2E;YAC3E,0EAA0E;YAC1E,8DAA8D;YAC9D,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;oBACvB,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;oBACpH,OAAO,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;oBACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACxC,CAAC;gBACD,OAAO;YACX,CAAC;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IACD,eAAe,EAAE,UAAU,KAAK,EAAE,MAAM;QACpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO;QACX,CAAC;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,MAAM,IAAI,QAAQ,YAAY,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACjF,MAAM,EAAE,OAAO,EAAE,uEAAuE;oBACpF,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;YACpG,CAAC;YACD,IAAI,QAAQ,YAAY,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC1C,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,8BAA8B,CAAC;oBAC/E,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;YACpG,CAAC;YACD,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;gBACvC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,gDAAgD,CAAC;oBACvF,KAAK,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;YACpG,CAAC;QACL,CAAC;IACL,CAAC;IACD,YAAY,EAAE,UAAU,WAAW,EAAE,SAAS;QAC1C,oDAAoD;QACpD,IAAI,IAAI,CAAC;QACT,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YACpB,yBAAyB;YACzB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;YACvC,qEAAqE;YACrE,IAAI,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;YAClC,IAAI,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,GAAG,CAAC;gBAC/B,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACrB,0DAA0D;oBAC1D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;oBACzC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvB,WAAW,EAAE,CAAC;oBACd,SAAS;gBACb,CAAC;gBACD,CAAC,EAAE,CAAC;YACR,CAAC;YACD,yDAAyD;YACzD,oDAAoD;YACpD,eAAe;YACf,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;gBAClB,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;iBACI,CAAC;gBACF,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC;YAC7B,CAAC;YACD,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAClC,CAAC;aACI,CAAC,CAAC,4BAA4B;YAC/B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAClC,CAAC;QACD,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,yCAAyC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC;YAC3C,WAAW,CAAC,gBAAgB,EAAE,CAAC;YAC/B,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IACD,oBAAoB,EAAE,UAAU,WAAW;QACvC,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;YACpB,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK;iBAChC,MAAM,CAAC,UAAU,CAAC;gBACnB,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK,GAAG,EAAE,CAAC;oBAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;gBACtE,CAAC;gBACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC;wBACzC,OAAO,IAAI,CAAC;oBAChB,CAAC;gBACL,CAAC;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IACD,qBAAqB,EAAE,UAAU,KAAK;QAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO;QACX,CAAC;QACD,oBAAoB;QACpB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,CAAC;QACT,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,IAAI,YAAY,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACxB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;gBAChC,CAAC;qBACI,CAAC;oBACF,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,IAAI,QAAQ,YAAY,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;wBACjD,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAClF,CAAC;oBACD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;wBACnC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACvB,CAAC;yBACI,CAAC;wBACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC3B,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IACD,WAAW,EAAE,UAAU,KAAK;QACxB,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO;QACX,CAAC;QACD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACpB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBAChC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBACrC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC;QACD,SAAS,CAAC,OAAO,CAAC,UAAU,KAAK;YAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACnB,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,IAAI,OAAO,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvD,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI;oBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;wBAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;oBAC9D,CAAC;oBACD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACzB,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;gBAC9D,CAAC,CAAC,CAAC;gBACH,QAAQ,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACvD,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAC;AACF,OAAO,CAAC,OAAO,GAAG,YAAY,CAAC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\n/* eslint-disable no-unused-vars */\r\n/**\r\n * @todo - Remove unused when JSDoc types are added for visitor methods\r\n */\r\nvar tree_1 = tslib_1.__importDefault(require(\"../tree\"));\r\nvar visitor_1 = tslib_1.__importDefault(require(\"./visitor\"));\r\nvar CSSVisitorUtils = /** @class */ (function () {\r\n    function CSSVisitorUtils(context) {\r\n        this._visitor = new visitor_1.default(this);\r\n        this._context = context;\r\n    }\r\n    CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n        var rule;\r\n        if (!bodyRules) {\r\n            return false;\r\n        }\r\n        for (var r = 0; r < bodyRules.length; r++) {\r\n            rule = bodyRules[r];\r\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                // the atrule contains something that was referenced (likely by extend)\r\n                // therefore it needs to be shown in output too\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n        if (owner && owner.rules) {\r\n            owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n        }\r\n    };\r\n    CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n        return (owner && owner.rules)\r\n            ? (owner.rules.length === 0) : true;\r\n    };\r\n    CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n        return (rulesetNode && rulesetNode.paths)\r\n            ? (rulesetNode.paths.length > 0) : false;\r\n    };\r\n    CSSVisitorUtils.prototype.resolveVisibility = function (node) {\r\n        if (!node.blocksVisibility()) {\r\n            if (this.isEmpty(node)) {\r\n                return;\r\n            }\r\n            return node;\r\n        }\r\n        var compiledRulesBody = node.rules[0];\r\n        this.keepOnlyVisibleChilds(compiledRulesBody);\r\n        if (this.isEmpty(compiledRulesBody)) {\r\n            return;\r\n        }\r\n        node.ensureVisibility();\r\n        node.removeVisibilityBlock();\r\n        return node;\r\n    };\r\n    CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n        if (rulesetNode.firstRoot) {\r\n            return true;\r\n        }\r\n        if (this.isEmpty(rulesetNode)) {\r\n            return false;\r\n        }\r\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    return CSSVisitorUtils;\r\n}());\r\nvar ToCSSVisitor = function (context) {\r\n    this._visitor = new visitor_1.default(this);\r\n    this._context = context;\r\n    this.utils = new CSSVisitorUtils(context);\r\n};\r\nToCSSVisitor.prototype = {\r\n    isReplacing: true,\r\n    run: function (root) {\r\n        return this._visitor.visit(root);\r\n    },\r\n    visitDeclaration: function (declNode, visitArgs) {\r\n        if (declNode.blocksVisibility() || declNode.variable) {\r\n            return;\r\n        }\r\n        return declNode;\r\n    },\r\n    visitMixinDefinition: function (mixinNode, visitArgs) {\r\n        // mixin definitions do not get eval'd - this means they keep state\r\n        // so we have to clear that state here so it isn't used if toCSS is called twice\r\n        mixinNode.frames = [];\r\n    },\r\n    visitExtend: function (extendNode, visitArgs) {\r\n    },\r\n    visitComment: function (commentNode, visitArgs) {\r\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n            return;\r\n        }\r\n        return commentNode;\r\n    },\r\n    visitMedia: function (mediaNode, visitArgs) {\r\n        var originalRules = mediaNode.rules[0].rules;\r\n        mediaNode.accept(this._visitor);\r\n        visitArgs.visitDeeper = false;\r\n        return this.utils.resolveVisibility(mediaNode, originalRules);\r\n    },\r\n    visitImport: function (importNode, visitArgs) {\r\n        if (importNode.blocksVisibility()) {\r\n            return;\r\n        }\r\n        return importNode;\r\n    },\r\n    visitAtRule: function (atRuleNode, visitArgs) {\r\n        if (atRuleNode.rules && atRuleNode.rules.length) {\r\n            return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n        }\r\n        else {\r\n            return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n        }\r\n    },\r\n    visitAnonymous: function (anonymousNode, visitArgs) {\r\n        if (!anonymousNode.blocksVisibility()) {\r\n            anonymousNode.accept(this._visitor);\r\n            return anonymousNode;\r\n        }\r\n    },\r\n    visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n        // if there is only one nested ruleset and that one has no path, then it is\r\n        // just fake ruleset\r\n        function hasFakeRuleset(atRuleNode) {\r\n            var bodyRules = atRuleNode.rules;\r\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n        }\r\n        function getBodyRules(atRuleNode) {\r\n            var nodeRules = atRuleNode.rules;\r\n            if (hasFakeRuleset(atRuleNode)) {\r\n                return nodeRules[0].rules;\r\n            }\r\n            return nodeRules;\r\n        }\r\n        // it is still true that it is only one ruleset in array\r\n        // this is last such moment\r\n        // process childs\r\n        var originalRules = getBodyRules(atRuleNode);\r\n        atRuleNode.accept(this._visitor);\r\n        visitArgs.visitDeeper = false;\r\n        if (!this.utils.isEmpty(atRuleNode)) {\r\n            this._mergeRules(atRuleNode.rules[0].rules);\r\n        }\r\n        return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n    },\r\n    visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n        if (atRuleNode.blocksVisibility()) {\r\n            return;\r\n        }\r\n        if (atRuleNode.name === '@charset') {\r\n            // Only output the debug info together with subsequent @charset definitions\r\n            // a comment (or @media statement) before the actual @charset atrule would\r\n            // be considered illegal css as it has to be on the first line\r\n            if (this.charset) {\r\n                if (atRuleNode.debugInfo) {\r\n                    var comment = new tree_1.default.Comment(\"/* \".concat(atRuleNode.toCSS(this._context).replace(/\\n/g, ''), \" */\\n\"));\r\n                    comment.debugInfo = atRuleNode.debugInfo;\r\n                    return this._visitor.visit(comment);\r\n                }\r\n                return;\r\n            }\r\n            this.charset = true;\r\n        }\r\n        return atRuleNode;\r\n    },\r\n    checkValidNodes: function (rules, isRoot) {\r\n        if (!rules) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < rules.length; i++) {\r\n            var ruleNode = rules[i];\r\n            if (isRoot && ruleNode instanceof tree_1.default.Declaration && !ruleNode.variable) {\r\n                throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n            }\r\n            if (ruleNode instanceof tree_1.default.Call) {\r\n                throw { message: \"Function '\".concat(ruleNode.name, \"' did not return a root node\"),\r\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n            }\r\n            if (ruleNode.type && !ruleNode.allowRoot) {\r\n                throw { message: \"\".concat(ruleNode.type, \" node returned by a function is not valid here\"),\r\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n            }\r\n        }\r\n    },\r\n    visitRuleset: function (rulesetNode, visitArgs) {\r\n        // at this point rulesets are nested into each other\r\n        var rule;\r\n        var rulesets = [];\r\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n        if (!rulesetNode.root) {\r\n            // remove invisible paths\r\n            this._compileRulesetPaths(rulesetNode);\r\n            // remove rulesets from this ruleset body and compile them separately\r\n            var nodeRules = rulesetNode.rules;\r\n            var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n            for (var i = 0; i < nodeRuleCnt;) {\r\n                rule = nodeRules[i];\r\n                if (rule && rule.rules) {\r\n                    // visit because we are moving them out from being a child\r\n                    rulesets.push(this._visitor.visit(rule));\r\n                    nodeRules.splice(i, 1);\r\n                    nodeRuleCnt--;\r\n                    continue;\r\n                }\r\n                i++;\r\n            }\r\n            // accept the visitor to remove rules and refactor itself\r\n            // then we can decide nogw whether we want it or not\r\n            // compile body\r\n            if (nodeRuleCnt > 0) {\r\n                rulesetNode.accept(this._visitor);\r\n            }\r\n            else {\r\n                rulesetNode.rules = null;\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        }\r\n        else { // if (! rulesetNode.root) {\r\n            rulesetNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n        }\r\n        if (rulesetNode.rules) {\r\n            this._mergeRules(rulesetNode.rules);\r\n            this._removeDuplicateRules(rulesetNode.rules);\r\n        }\r\n        // now decide whether we keep the ruleset\r\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n            rulesetNode.ensureVisibility();\r\n            rulesets.splice(0, 0, rulesetNode);\r\n        }\r\n        if (rulesets.length === 1) {\r\n            return rulesets[0];\r\n        }\r\n        return rulesets;\r\n    },\r\n    _compileRulesetPaths: function (rulesetNode) {\r\n        if (rulesetNode.paths) {\r\n            rulesetNode.paths = rulesetNode.paths\r\n                .filter(function (p) {\r\n                var i;\r\n                if (p[0].elements[0].combinator.value === ' ') {\r\n                    p[0].elements[0].combinator = new (tree_1.default.Combinator)('');\r\n                }\r\n                for (i = 0; i < p.length; i++) {\r\n                    if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n    },\r\n    _removeDuplicateRules: function (rules) {\r\n        if (!rules) {\r\n            return;\r\n        }\r\n        // remove duplicates\r\n        var ruleCache = {};\r\n        var ruleList;\r\n        var rule;\r\n        var i;\r\n        for (i = rules.length - 1; i >= 0; i--) {\r\n            rule = rules[i];\r\n            if (rule instanceof tree_1.default.Declaration) {\r\n                if (!ruleCache[rule.name]) {\r\n                    ruleCache[rule.name] = rule;\r\n                }\r\n                else {\r\n                    ruleList = ruleCache[rule.name];\r\n                    if (ruleList instanceof tree_1.default.Declaration) {\r\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                    }\r\n                    var ruleCSS = rule.toCSS(this._context);\r\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                        rules.splice(i, 1);\r\n                    }\r\n                    else {\r\n                        ruleList.push(ruleCSS);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _mergeRules: function (rules) {\r\n        if (!rules) {\r\n            return;\r\n        }\r\n        var groups = {};\r\n        var groupsArr = [];\r\n        for (var i = 0; i < rules.length; i++) {\r\n            var rule = rules[i];\r\n            if (rule.merge) {\r\n                var key = rule.name;\r\n                groups[key] ? rules.splice(i--, 1) :\r\n                    groupsArr.push(groups[key] = []);\r\n                groups[key].push(rule);\r\n            }\r\n        }\r\n        groupsArr.forEach(function (group) {\r\n            if (group.length > 0) {\r\n                var result_1 = group[0];\r\n                var space_1 = [];\r\n                var comma_1 = [new tree_1.default.Expression(space_1)];\r\n                group.forEach(function (rule) {\r\n                    if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                        comma_1.push(new tree_1.default.Expression(space_1 = []));\r\n                    }\r\n                    space_1.push(rule.value);\r\n                    result_1.important = result_1.important || rule.important;\r\n                });\r\n                result_1.value = new tree_1.default.Value(comma_1);\r\n            }\r\n        });\r\n    }\r\n};\r\nexports.default = ToCSSVisitor;\r\n//# sourceMappingURL=to-css-visitor.js.map"]}