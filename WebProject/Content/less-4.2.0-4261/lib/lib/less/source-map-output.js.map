{"version":3,"file":"source-map-output.js","sourceRoot":"","sources":["../../less/source-map-output.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,SAAS,SAAS,CAAC,WAAW;IAC1B,IAAI,eAAe,GAAG,aAAa,CAAC,CAAC;QACjC,SAAS,eAAe,CAAC,OAAO;YAC5B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;YACxC,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,uBAAuB,CAAC;YAChE,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC5E,CAAC;YACD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACzC,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC5E,CAAC;YACD,IAAI,OAAO,CAAC,iBAAiB,EAAE,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACxE,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC7E,IAAI,CAAC,kBAAkB,IAAI,GAAG,CAAC;gBACnC,CAAC;YACL,CAAC;iBACI,CAAC;gBACF,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YACjC,CAAC;YACD,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACpD,IAAI,CAAC,8BAA8B,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;YAC1E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,eAAe,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,IAAI;YACrD,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;gBACzE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBACtD,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;oBACpD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC;YACL,CAAC;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QACF,eAAe,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,QAAQ;YAC5D,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACxC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;YACzC,OAAO,CAAC,IAAI,CAAC,kBAAkB,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC;QACtD,CAAC,CAAC;QACF,eAAe,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ;YACtE,8BAA8B;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACT,OAAO;YACX,CAAC;YACD,IAAI,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,CAAC;YAClD,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACvD,kDAAkD;gBAClD,IAAI,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;oBACnD,mBAAmB;oBACnB,KAAK,IAAI,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC1D,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;wBACZ,KAAK,GAAG,CAAC,CAAC;oBACd,CAAC;oBACD,oBAAoB;oBACpB,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtF,CAAC;gBACD;;;mBAGG;gBACH,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;oBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACtB,OAAO;gBACX,CAAC;gBACD,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC9C,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtC,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACxD,CAAC;YACD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1B,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACZ,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE;wBACjG,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,MAAM,EAAE;wBACpE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC7D,CAAC;qBACI,CAAC;oBACF,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAChC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;4BACnH,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;4BACtF,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBAC7D,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACrB,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC;YACnC,CAAC;iBACI,CAAC;gBACF,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;YAClC,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QACF,eAAe,CAAC,SAAS,CAAC,OAAO,GAAG;YAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,eAAe,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,OAAO;YAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,IAAI,CAAC,8BAA8B,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YACrH,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;oBACrC,iDAAiD;oBACjD,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;wBAC7C,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;wBACzC,IAAI,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAE,CAAC;4BAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnE,CAAC;wBACD,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;oBACxF,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACvB,IAAI,YAAY,GAAG,KAAK,CAAC,CAAC;gBAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzE,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBACrC,CAAC;qBACI,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC/B,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAC3C,CAAC;gBACD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC;YACtC,CAAC;YACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAC;QACF,OAAO,eAAe,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;IACL,OAAO,eAAe,CAAC;AAC3B,CAAC;AACD,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1(environment) {\r\n    var SourceMapOutput = /** @class */ (function () {\r\n        function SourceMapOutput(options) {\r\n            this._css = [];\r\n            this._rootNode = options.rootNode;\r\n            this._contentsMap = options.contentsMap;\r\n            this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n            if (options.sourceMapFilename) {\r\n                this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n            }\r\n            this._outputFilename = options.outputFilename;\r\n            this.sourceMapURL = options.sourceMapURL;\r\n            if (options.sourceMapBasepath) {\r\n                this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n            }\r\n            if (options.sourceMapRootpath) {\r\n                this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                    this._sourceMapRootpath += '/';\r\n                }\r\n            }\r\n            else {\r\n                this._sourceMapRootpath = '';\r\n            }\r\n            this._outputSourceFiles = options.outputSourceFiles;\r\n            this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n            this._lineNumber = 0;\r\n            this._column = 0;\r\n        }\r\n        SourceMapOutput.prototype.removeBasepath = function (path) {\r\n            if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                path = path.substring(this._sourceMapBasepath.length);\r\n                if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                    path = path.substring(1);\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n        SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n            filename = filename.replace(/\\\\/g, '/');\r\n            filename = this.removeBasepath(filename);\r\n            return (this._sourceMapRootpath || '') + filename;\r\n        };\r\n        SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n            // ignore adding empty strings\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n            var lines, sourceLines, columns, sourceColumns, i;\r\n            if (fileInfo && fileInfo.filename) {\r\n                var inputSource = this._contentsMap[fileInfo.filename];\r\n                // remove vars/banner added to the top of the file\r\n                if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                    // adjust the index\r\n                    index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                    if (index < 0) {\r\n                        index = 0;\r\n                    }\r\n                    // adjust the source\r\n                    inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                }\r\n                /**\r\n                 * ignore empty content, or failsafe\r\n                 * if contents map is incorrect\r\n                 */\r\n                if (inputSource === undefined) {\r\n                    this._css.push(chunk);\r\n                    return;\r\n                }\r\n                inputSource = inputSource.substring(0, index);\r\n                sourceLines = inputSource.split('\\n');\r\n                sourceColumns = sourceLines[sourceLines.length - 1];\r\n            }\r\n            lines = chunk.split('\\n');\r\n            columns = lines[lines.length - 1];\r\n            if (fileInfo && fileInfo.filename) {\r\n                if (!mapLines) {\r\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                        original: { line: sourceLines.length, column: sourceColumns.length },\r\n                        source: this.normalizeFilename(fileInfo.filename) });\r\n                }\r\n                else {\r\n                    for (i = 0; i < lines.length; i++) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                            original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                }\r\n            }\r\n            if (lines.length === 1) {\r\n                this._column += columns.length;\r\n            }\r\n            else {\r\n                this._lineNumber += lines.length - 1;\r\n                this._column = columns.length;\r\n            }\r\n            this._css.push(chunk);\r\n        };\r\n        SourceMapOutput.prototype.isEmpty = function () {\r\n            return this._css.length === 0;\r\n        };\r\n        SourceMapOutput.prototype.toCSS = function (context) {\r\n            this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n            if (this._outputSourceFiles) {\r\n                for (var filename in this._contentsMap) {\r\n                    // eslint-disable-next-line no-prototype-builtins\r\n                    if (this._contentsMap.hasOwnProperty(filename)) {\r\n                        var source = this._contentsMap[filename];\r\n                        if (this._contentsIgnoredCharsMap[filename]) {\r\n                            source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                        }\r\n                        this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                    }\r\n                }\r\n            }\r\n            this._rootNode.genCSS(context, this);\r\n            if (this._css.length > 0) {\r\n                var sourceMapURL = void 0;\r\n                var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                if (this.sourceMapURL) {\r\n                    sourceMapURL = this.sourceMapURL;\r\n                }\r\n                else if (this._sourceMapFilename) {\r\n                    sourceMapURL = this._sourceMapFilename;\r\n                }\r\n                this.sourceMapURL = sourceMapURL;\r\n                this.sourceMap = sourceMapContent;\r\n            }\r\n            return this._css.join('');\r\n        };\r\n        return SourceMapOutput;\r\n    }());\r\n    return SourceMapOutput;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=source-map-output.js.map"]}