{"version":3,"file":"file-manager.js","sourceRoot":"","sources":["../../less-node/file-manager.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar path_1 = tslib_1.__importDefault(require(\"path\"));\r\nvar fs_1 = tslib_1.__importDefault(require(\"./fs\"));\r\nvar abstract_file_manager_js_1 = tslib_1.__importDefault(require(\"../less/environment/abstract-file-manager.js\"));\r\nvar FileManager = function () { };\r\nFileManager.prototype = Object.assign(new abstract_file_manager_js_1.default(), {\r\n    supports: function () {\r\n        return true;\r\n    },\r\n    supportsSync: function () {\r\n        return true;\r\n    },\r\n    loadFile: function (filename, currentDirectory, options, environment, callback) {\r\n        var fullFilename;\r\n        var isAbsoluteFilename = this.isPathAbsolute(filename);\r\n        var filenamesTried = [];\r\n        var self = this;\r\n        var prefix = filename.slice(0, 1);\r\n        var explicit = prefix === '.' || prefix === '/';\r\n        var result = null;\r\n        var isNodeModule = false;\r\n        var npmPrefix = 'npm://';\r\n        options = options || {};\r\n        var paths = isAbsoluteFilename ? [''] : [currentDirectory];\r\n        if (options.paths) {\r\n            paths.push.apply(paths, options.paths);\r\n        }\r\n        if (!isAbsoluteFilename && paths.indexOf('.') === -1) {\r\n            paths.push('.');\r\n        }\r\n        var prefixes = options.prefixes || [''];\r\n        var fileParts = this.extractUrlParts(filename);\r\n        if (options.syncImport) {\r\n            getFileData(returnData, returnData);\r\n            if (callback) {\r\n                callback(result.error, result);\r\n            }\r\n            else {\r\n                return result;\r\n            }\r\n        }\r\n        else {\r\n            // promise is guaranteed to be asyncronous\r\n            // which helps as it allows the file handle\r\n            // to be closed before it continues with the next file\r\n            return new Promise(getFileData);\r\n        }\r\n        function returnData(data) {\r\n            if (!data.filename) {\r\n                result = { error: data };\r\n            }\r\n            else {\r\n                result = data;\r\n            }\r\n        }\r\n        function getFileData(fulfill, reject) {\r\n            (function tryPathIndex(i) {\r\n                function tryWithExtension() {\r\n                    var extFilename = options.ext ? self.tryAppendExtension(fullFilename, options.ext) : fullFilename;\r\n                    if (extFilename !== fullFilename && !explicit && paths[i] === '.') {\r\n                        try {\r\n                            fullFilename = require.resolve(extFilename);\r\n                            isNodeModule = true;\r\n                        }\r\n                        catch (e) {\r\n                            filenamesTried.push(npmPrefix + extFilename);\r\n                            fullFilename = extFilename;\r\n                        }\r\n                    }\r\n                    else {\r\n                        fullFilename = extFilename;\r\n                    }\r\n                }\r\n                if (i < paths.length) {\r\n                    (function tryPrefix(j) {\r\n                        if (j < prefixes.length) {\r\n                            isNodeModule = false;\r\n                            fullFilename = fileParts.rawPath + prefixes[j] + fileParts.filename;\r\n                            if (paths[i]) {\r\n                                fullFilename = path_1.default.join(paths[i], fullFilename);\r\n                            }\r\n                            if (!explicit && paths[i] === '.') {\r\n                                try {\r\n                                    fullFilename = require.resolve(fullFilename);\r\n                                    isNodeModule = true;\r\n                                }\r\n                                catch (e) {\r\n                                    filenamesTried.push(npmPrefix + fullFilename);\r\n                                    tryWithExtension();\r\n                                }\r\n                            }\r\n                            else {\r\n                                tryWithExtension();\r\n                            }\r\n                            var readFileArgs = [fullFilename];\r\n                            if (!options.rawBuffer) {\r\n                                readFileArgs.push('utf-8');\r\n                            }\r\n                            if (options.syncImport) {\r\n                                try {\r\n                                    var data = fs_1.default.readFileSync.apply(this, readFileArgs);\r\n                                    fulfill({ contents: data, filename: fullFilename });\r\n                                }\r\n                                catch (e) {\r\n                                    filenamesTried.push(isNodeModule ? npmPrefix + fullFilename : fullFilename);\r\n                                    return tryPrefix(j + 1);\r\n                                }\r\n                            }\r\n                            else {\r\n                                readFileArgs.push(function (e, data) {\r\n                                    if (e) {\r\n                                        filenamesTried.push(isNodeModule ? npmPrefix + fullFilename : fullFilename);\r\n                                        return tryPrefix(j + 1);\r\n                                    }\r\n                                    fulfill({ contents: data, filename: fullFilename });\r\n                                });\r\n                                fs_1.default.readFile.apply(this, readFileArgs);\r\n                            }\r\n                        }\r\n                        else {\r\n                            tryPathIndex(i + 1);\r\n                        }\r\n                    })(0);\r\n                }\r\n                else {\r\n                    reject({ type: 'File', message: \"'\".concat(filename, \"' wasn't found. Tried - \").concat(filenamesTried.join(',')) });\r\n                }\r\n            }(0));\r\n        }\r\n    },\r\n    loadFileSync: function (filename, currentDirectory, options, environment) {\r\n        options.syncImport = true;\r\n        return this.loadFile(filename, currentDirectory, options, environment);\r\n    }\r\n});\r\nexports.default = FileManager;\r\n//# sourceMappingURL=file-manager.js.map"]}