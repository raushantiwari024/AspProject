{"version":3,"file":"image-size.js","sourceRoot":"","sources":["../../less-node/image-size.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar dimension_1 = tslib_1.__importDefault(require(\"../less/tree/dimension\"));\r\nvar expression_1 = tslib_1.__importDefault(require(\"../less/tree/expression\"));\r\nvar function_registry_1 = tslib_1.__importDefault(require(\"./../less/functions/function-registry\"));\r\nexports.default = (function (environment) {\r\n    function imageSize(functionContext, filePathNode) {\r\n        var filePath = filePathNode.value;\r\n        var currentFileInfo = functionContext.currentFileInfo;\r\n        var currentDirectory = currentFileInfo.rewriteUrls ?\r\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n        var fragmentStart = filePath.indexOf('#');\r\n        if (fragmentStart !== -1) {\r\n            filePath = filePath.slice(0, fragmentStart);\r\n        }\r\n        var fileManager = environment.getFileManager(filePath, currentDirectory, functionContext.context, environment, true);\r\n        if (!fileManager) {\r\n            throw {\r\n                type: 'File',\r\n                message: \"Can not set up FileManager for \".concat(filePathNode)\r\n            };\r\n        }\r\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, functionContext.context, environment);\r\n        if (fileSync.error) {\r\n            throw fileSync.error;\r\n        }\r\n        var sizeOf = require('image-size');\r\n        return sizeOf(fileSync.filename);\r\n    }\r\n    var imageFunctions = {\r\n        'image-size': function (filePathNode) {\r\n            var size = imageSize(this, filePathNode);\r\n            return new expression_1.default([\r\n                new dimension_1.default(size.width, 'px'),\r\n                new dimension_1.default(size.height, 'px')\r\n            ]);\r\n        },\r\n        'image-width': function (filePathNode) {\r\n            var size = imageSize(this, filePathNode);\r\n            return new dimension_1.default(size.width, 'px');\r\n        },\r\n        'image-height': function (filePathNode) {\r\n            var size = imageSize(this, filePathNode);\r\n            return new dimension_1.default(size.height, 'px');\r\n        }\r\n    };\r\n    function_registry_1.default.addMultiple(imageFunctions);\r\n});\r\n//# sourceMappingURL=image-size.js.map"]}