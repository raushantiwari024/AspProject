{"version":3,"file":"url-file-manager.js","sourceRoot":"","sources":["../../less-node/url-file-manager.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\n/* eslint-disable no-unused-vars */\r\n/**\r\n * @todo - remove top eslint rule when FileManagers have JSDoc type\r\n * and are TS-type-checked\r\n */\r\nvar isUrlRe = /^(?:https?:)?\\/\\//i;\r\nvar url_1 = tslib_1.__importDefault(require(\"url\"));\r\nvar request;\r\nvar abstract_file_manager_js_1 = tslib_1.__importDefault(require(\"../less/environment/abstract-file-manager.js\"));\r\nvar logger_1 = tslib_1.__importDefault(require(\"../less/logger\"));\r\nvar UrlFileManager = function () { };\r\nUrlFileManager.prototype = Object.assign(new abstract_file_manager_js_1.default(), {\r\n    supports: function (filename, currentDirectory, options, environment) {\r\n        return isUrlRe.test(filename) || isUrlRe.test(currentDirectory);\r\n    },\r\n    loadFile: function (filename, currentDirectory, options, environment) {\r\n        return new Promise(function (fulfill, reject) {\r\n            if (request === undefined) {\r\n                try {\r\n                    request = require('needle');\r\n                }\r\n                catch (e) {\r\n                    request = null;\r\n                }\r\n            }\r\n            if (!request) {\r\n                reject({ type: 'File', message: 'optional dependency \\'needle\\' required to import over http(s)\\n' });\r\n                return;\r\n            }\r\n            var urlStr = isUrlRe.test(filename) ? filename : url_1.default.resolve(currentDirectory, filename);\r\n            /** native-request currently has a bug */\r\n            var hackUrlStr = urlStr.indexOf('?') === -1 ? urlStr + '?' : urlStr;\r\n            request.get(hackUrlStr, { follow_max: 5 }, function (err, resp, body) {\r\n                if (err || resp && resp.statusCode >= 400) {\r\n                    var message = resp && resp.statusCode === 404\r\n                        ? \"resource '\".concat(urlStr, \"' was not found\\n\")\r\n                        : \"resource '\".concat(urlStr, \"' gave this Error:\\n  \").concat(err || resp.statusMessage || resp.statusCode, \"\\n\");\r\n                    reject({ type: 'File', message: message });\r\n                    return;\r\n                }\r\n                if (resp.statusCode >= 300) {\r\n                    reject({ type: 'File', message: \"resource '\".concat(urlStr, \"' caused too many redirects\") });\r\n                    return;\r\n                }\r\n                body = body.toString('utf8');\r\n                if (!body) {\r\n                    logger_1.default.warn(\"Warning: Empty body (HTTP \".concat(resp.statusCode, \") returned by \\\"\").concat(urlStr, \"\\\"\"));\r\n                }\r\n                fulfill({ contents: body || '', filename: urlStr });\r\n            });\r\n        });\r\n    }\r\n});\r\nexports.default = UrlFileManager;\r\n//# sourceMappingURL=url-file-manager.js.map"]}