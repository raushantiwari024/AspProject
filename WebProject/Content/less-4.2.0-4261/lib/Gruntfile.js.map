{"version":3,"file":"Gruntfile.js","sourceRoot":"","sources":["../Gruntfile.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar resolve = require('resolve');\nvar path = require('path');\n\nvar testFolder = path.relative(process.cwd(), path.dirname(resolve.sync('@less/test-data')));\nvar lessFolder = path.join(testFolder, 'less');\n\nmodule.exports = function(grunt) {\n    grunt.option(\"stack\", true);\n\n    // Report the elapsed execution time of tasks.\n    require(\"time-grunt\")(grunt);\n\n    var git = require(\"git-rev\");\n\n    // Sauce Labs browser\n    var browsers = [\n        // Desktop browsers\n        {\n            browserName: \"chrome\",\n            version: \"latest\",\n            platform: \"Windows 7\"\n        },\n        {\n            browserName: \"firefox\",\n            version: \"latest\",\n            platform: \"Linux\"\n        },\n        {\n            browserName: \"safari\",\n            version: \"9\",\n            platform: \"OS X 10.11\"\n        },\n        {\n            browserName: \"internet explorer\",\n            version: \"8\",\n            platform: \"Windows XP\"\n        },\n        {\n            browserName: \"internet explorer\",\n            version: \"11\",\n            platform: \"Windows 8.1\"\n        },\n        {\n            browserName: \"edge\",\n            version: \"13\",\n            platform: \"Windows 10\"\n        },\n        // Mobile browsers\n        {\n            browserName: \"ipad\",\n            deviceName: \"iPad Air Simulator\",\n            deviceOrientation: \"portrait\",\n            version: \"8.4\",\n            platform: \"OS X 10.9\"\n        },\n        {\n            browserName: \"iphone\",\n            deviceName: \"iPhone 5 Simulator\",\n            deviceOrientation: \"portrait\",\n            version: \"9.3\",\n            platform: \"OS X 10.11\"\n        },\n        {\n            browserName: \"android\",\n            deviceName: \"Google Nexus 7 HD Emulator\",\n            deviceOrientation: \"portrait\",\n            version: \"4.4\",\n            platform: \"Linux\"\n        }\n    ];\n\n    var sauceJobs = {};\n\n    var browserTests = [\n        \"filemanager-plugin\",\n        \"visitor-plugin\",\n        \"global-vars\",\n        \"modify-vars\",\n        \"production\",\n        \"rootpath-relative\",\n        \"rootpath-rewrite-urls\",\n        \"rootpath\",\n        \"relative-urls\",\n        \"rewrite-urls\",\n        \"browser\",\n        \"no-js-errors\",\n        \"legacy\"\n    ];\n\n    function makeJob(testName) {\n        sauceJobs[testName] = {\n            options: {\n                urls:\n                    testName === \"all\"\n                        ? browserTests.map(function(name) {\n                            return (\n                                \"http://localhost:8081/tmp/browser/test-runner-\" +\n                                  name +\n                                  \".html\"\n                            );\n                        })\n                        : [\n                            \"http://localhost:8081/tmp/browser/test-runner-\" +\n                                  testName +\n                                  \".html\"\n                        ],\n                testname:\n                    testName === \"all\" ? \"Unit Tests for Less.js\" : testName,\n                browsers: browsers,\n                public: \"public\",\n                recordVideo: false,\n                videoUploadOnPass: false,\n                recordScreenshots: process.env.TRAVIS_BRANCH !== \"master\",\n                build:\n                    process.env.TRAVIS_BRANCH === \"master\"\n                        ? process.env.TRAVIS_JOB_ID\n                        : undefined,\n                tags: [\n                    process.env.TRAVIS_BUILD_NUMBER,\n                    process.env.TRAVIS_PULL_REQUEST,\n                    process.env.TRAVIS_BRANCH\n                ],\n                statusCheckAttempts: -1,\n                sauceConfig: {\n                    \"idle-timeout\": 100\n                },\n                throttled: 5,\n                onTestComplete: function(result, callback) {\n                    // Called after a unit test is done, per page, per browser\n                    // 'result' param is the object returned by the test framework's reporter\n                    // 'callback' is a Node.js style callback function. You must invoke it after you\n                    // finish your work.\n                    // Pass a non-null value as the callback's first parameter if you want to throw an\n                    // exception. If your function is synchronous you can also throw exceptions\n                    // directly.\n                    // Passing true or false as the callback's second parameter passes or fails the\n                    // test. Passing undefined does not alter the test result. Please note that this\n                    // only affects the grunt task's result. You have to explicitly update the Sauce\n                    // Labs job's status via its REST API, if you want so.\n\n                    // This should be the encrypted value in Travis\n                    var user = process.env.SAUCE_USERNAME;\n                    var pass = process.env.SAUCE_ACCESS_KEY;\n\n                    git.short(function(hash) {\n                        require(\"phin\")(\n                            {\n                                method: \"PUT\",\n                                url: [\n                                    \"https://saucelabs.com/rest/v1\",\n                                    user,\n                                    \"jobs\",\n                                    result.job_id\n                                ].join(\"/\"),\n                                auth: { user: user, pass: pass },\n                                data: {\n                                    passed: result.passed,\n                                    build: \"build-\" + hash\n                                }\n                            },\n                            function(error, response) {\n                                if (error) {\n                                    console.log(error);\n                                    callback(error);\n                                } else if (response.statusCode !== 200) {\n                                    console.log(response);\n                                    callback(\n                                        new Error(\"Unexpected response status\")\n                                    );\n                                } else {\n                                    callback(null, result.passed);\n                                }\n                            }\n                        );\n                    });\n                }\n            }\n        };\n    }\n\n    // Make the SauceLabs jobs\n    [\"all\"].concat(browserTests).map(makeJob);\n\n    // Project configuration.\n    grunt.initConfig({\n        shell: {\n            options: {\n                stdout: true,\n                failOnError: true,\n                execOptions: {\n                    maxBuffer: Infinity\n                }\n            },\n            build: {\n                command: [\n                    /** Browser runtime */\n                    \"node build/rollup.js --dist\",\n                    /** Copy to repo root */\n                    \"npm run copy:root\",\n                    /** Node.js runtime */\n                    \"npm run build\"\n                ].join(\" && \")\n            },\n            testbuild: {\n                command: [\n                    \"npm run build\",\n                    \"node build/rollup.js --browser --out=./tmp/browser/less.min.js\"\n                ].join(\" && \")\n            },\n            testcjs: {\n                command: \"npm run build\"\n            },\n            testbrowser: {\n                command: \"node build/rollup.js --browser --out=./tmp/browser/less.min.js\"\n            },\n            test: {\n                command: 'ts-node test/test-es6.ts && node test/index.js'\n            },\n            generatebrowser: {\n                command: 'node test/browser/generator/generate.js'\n            },\n            runbrowser: {\n                command: 'node test/browser/generator/runner.js'\n            },\n            benchmark: {\n                command: \"node benchmark/index.js\"\n            },\n            opts: {\n                // test running with all current options (using `opts` since `options` means something already)\n                command: [\n                    // @TODO: make this more thorough\n                    // CURRENT OPTIONS\n                    `node bin/lessc --ie-compat ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    // --math\n                    `node bin/lessc --math=always ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    `node bin/lessc --math=parens-division ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    `node bin/lessc --math=parens ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    `node bin/lessc --math=strict ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    `node bin/lessc --math=strict-legacy ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n\n                    // DEPRECATED OPTIONS\n                    // --strict-math\n                    `node bin/lessc --strict-math=on ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`\n                ].join(\" && \")\n            },\n            plugin: {\n                command: [\n                    `node bin/lessc --clean-css=\"--s1 --advanced\" ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`,\n                    \"cd lib\",\n                    `node ../bin/lessc --clean-css=\"--s1 --advanced\" ../${lessFolder}/_main/lazy-eval.less ../tmp/lazy-eval.css`,\n                    `node ../bin/lessc --source-map=lazy-eval.css.map --autoprefix ../${lessFolder}/_main/lazy-eval.less ../tmp/lazy-eval.css`,\n                    \"cd ..\",\n                    // Test multiple plugins\n                    `node bin/lessc --plugin=clean-css=\"--s1 --advanced\" --plugin=autoprefix=\"ie 11,Edge >= 13,Chrome >= 47,Firefox >= 45,iOS >= 9.2,Safari >= 9\" ${lessFolder}/_main/lazy-eval.less tmp/lazy-eval.css`\n                ].join(\" && \")\n            },\n            \"sourcemap-test\": {\n                // quoted value doesn't seem to get picked up by time-grunt, or isn't output, at least; maybe just \"sourcemap\" is fine?\n                command: [\n                    `node bin/lessc --source-map=test/sourcemaps/maps/import-map.map ${lessFolder}/_main/import.less test/sourcemaps/import.css`,\n                    `node bin/lessc --source-map ${lessFolder}/sourcemaps/basic.less test/sourcemaps/basic.css`\n                ].join(\" && \")\n            }\n        },\n\n        eslint: {\n            target: [\n                \"test/**/*.js\",\n                \"src/less*/**/*.js\",\n                \"!test/less/errors/plugin/plugin-error.js\"\n            ],\n            options: {\n                configFile: \".eslintrc.js\",\n                fix: true\n            }\n        },\n\n        connect: {\n            server: {\n                options: {\n                    port: 8081,\n                    base: '../..'\n                }\n            }\n        },\n\n        \"saucelabs-mocha\": sauceJobs,\n\n        // Clean the version of less built for the tests\n        clean: {\n            test: [\"test/browser/less.js\", \"tmp\", \"test/less-bom\"],\n            \"sourcemap-test\": [\n                \"test/sourcemaps/*.css\",\n                \"test/sourcemaps/*.map\"\n            ],\n            sauce_log: [\"sc_*.log\"]\n        }\n    });\n\n    // Load these plugins to provide the necessary tasks\n    grunt.loadNpmTasks(\"grunt-saucelabs\");\n\n    require(\"jit-grunt\")(grunt);\n\n    // by default, run tests\n    grunt.registerTask(\"default\", [\"test\"]);\n\n    // Release\n    grunt.registerTask(\"dist\", [\n        \"shell:build\"\n    ]);\n\n    // Create the browser version of less.js\n    grunt.registerTask(\"browsertest-lessjs\", [\n        \"shell:testbrowser\"\n    ]);\n\n    // Run all browser tests\n    grunt.registerTask(\"browsertest\", [\n        \"browsertest-lessjs\",\n        \"connect\",\n        \"shell:runbrowser\"\n    ]);\n\n    // setup a web server to run the browser tests in a browser rather than phantom\n    grunt.registerTask(\"browsertest-server\", [\n        \"browsertest-lessjs\",\n        \"shell:generatebrowser\",\n        \"connect::keepalive\"\n    ]);\n\n    var previous_force_state = grunt.option(\"force\");\n\n    grunt.registerTask(\"force\", function(set) {\n        if (set === \"on\") {\n            grunt.option(\"force\", true);\n        } else if (set === \"off\") {\n            grunt.option(\"force\", false);\n        } else if (set === \"restore\") {\n            grunt.option(\"force\", previous_force_state);\n        }\n    });\n\n    grunt.registerTask(\"sauce\", [\n        \"browsertest-lessjs\",\n        \"shell:generatebrowser\",\n        \"connect\",\n        \"sauce-after-setup\"\n    ]);\n\n    grunt.registerTask(\"sauce-after-setup\", [\n        \"saucelabs-mocha:all\",\n        \"clean:sauce_log\"\n    ]);\n\n    var testTasks = [\n        \"clean\",\n        \"eslint\",\n        \"shell:testbuild\",\n        \"shell:test\",\n        \"shell:opts\",\n        \"shell:plugin\",\n        \"connect\",\n        \"shell:runbrowser\"\n    ];\n\n    if (\n        isNaN(Number(process.env.TRAVIS_PULL_REQUEST, 10)) &&\n        (process.env.TRAVIS_BRANCH === \"master\")\n    ) {\n        testTasks.push(\"force:on\");\n        testTasks.push(\"sauce-after-setup\");\n        testTasks.push(\"force:off\");\n    }\n\n    // Run all tests\n    grunt.registerTask(\"test\", testTasks);\n\n    // Run shell option tests (includes deprecated options)\n    grunt.registerTask(\"shell-options\", [\"shell:opts\"]);\n\n    // Run shell plugin test\n    grunt.registerTask(\"shell-plugin\", [\"shell:plugin\"]);\n\n    // Quickly build and run Node tests\n    grunt.registerTask(\"quicktest\", [\n        \"shell:testcjs\",\n        \"shell:test\"\n    ]);\n\n    // generate a good test environment for testing sourcemaps\n    grunt.registerTask(\"sourcemap-test\", [\n        \"clean:sourcemap-test\",\n        \"shell:build:lessc\",\n        \"shell:sourcemap-test\",\n        \"connect::keepalive\"\n    ]);\n\n    // Run benchmark\n    grunt.registerTask(\"benchmark\", [\n        \"shell:testcjs\",\n        \"shell:benchmark\"\n    ]);\n};\n"]}